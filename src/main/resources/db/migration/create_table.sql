--create TABLE users(
--                   id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--                      login VARCHAR(45) NOT NULL UNIQUE,
--                      password varchar(205) NOT NULL check(length(password) > 2)
--);
--
--CREATE TABLE locations(
--                      id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--                      name varchar(45) not null,
--                      user_id int REFERENCES users (id) ON DELETE CASCADE,
--                      latitude numeric NOT NULL,
--                      longitude numeric NOT NULL
--);
--
--CREATE UNIQUE INDEX idx_base_target ON locations (user_id, latitude, longitude);
--
--CREATE TABLE sessions (
--                          id varchar(50) PRIMARY KEY,
--                          user_id int REFERENCES users (id) ON DELETE CASCADE,
--                          expires_at TIMESTAMP(6)
--);
--CREATE INDEX sessions_unique_user_id_idx ON sessions (user_id);



create table users (
    id int4 generated by default as identity primary key,
    email varchar(255) not null unique,
    name varchar(255) not null,
    password varchar(255), not null
    locations integer not null,
    users_roles integer not null
    constraint location_constrint foreign key (locations) references public.locations(id)
    constraint location_constrint foreign key (users_roles) references public.roles(id)
);

create table locations (
    id integer generated by default as identity primary key,
	country varchar(255) not null,
	name varchar(255) not null,
	latitude float8 not null,
	longitude float8 not null,
	user_id integer not null,
	constraint user_id_constraint foreign key(user_id) references public.users(id)
);

create table roles (
    id integer generated by default as identity primary key,
    name varchar(255) not null
);

